version: 2.1
jobs:
  plan-apply:
    working_directory: /tmp/project
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: terraform init & plan
          command: |
            cd iac/deploy
            terraform get --update
            terraform init -input=false
            terraform plan -out="replace_autoscaling.tfplan" -replace="module.deploy_backend.aws_autoscaling_group.ec2_autoscaling" -replace="module.deploy_frontend.aws_autoscaling_group.ec2_autoscaling"
      - persist_to_workspace:
          root: /tmp/project/iac
          paths:
            - .
# 
  apply:
    working_directory: /tmp/iac
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: /tmp/iac
      - run:
          name: show
          command: cd /tmp/iac/deploy && ls -la
      - run:
          name: terraform
          command: |
            cd /tmp/iac/deploy
            terraform apply -auto-approve replace_autoscaling.tfplan
      - persist_to_workspace:
          root: /tmp/iac
          paths:
            - .
  
  plan-destroy:
    working_directory: /tmp/iac
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: /tmp/iac
      - run:
          name: terraform create destroy plan
          command: |
            cd /tmp/iac/deploy
            terraform plan -destroy -out="tfdestroy.tfplan"
      - persist_to_workspace:
          root: /tmp/iac
          paths:
            - .

  destroy:
    working_directory: /tmp/iac
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: /tmp/iac
      - run:
          name: terraform destroy
          command: |
            cd /tmp/iac/deploy
            terraform apply -auto-approve tfdestroy.tfplan

workflows:
  version: 2
  plan_approve_apply:
    jobs:
      - plan-apply
      - hold-apply:
          type: approval
          requires:
            - plan-apply
      - apply:
          requires:
            - hold-apply